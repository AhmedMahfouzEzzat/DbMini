Microsoft (R) Macro Assembler Version 14.00.24210.0	    12/19/17 05:42:37
source.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
 00000000			.data
 = 00001400				BUFSIZE = 5120;//5kb
 = 0000001E				record_size=30
 = 00000003				grade_size=3
 00000000 00000000			filehandle dword ?
 00000004  00001400 [			buffer BYTE BUFSIZE DUP(?),0
	    00
	   ] 00
 00001405  00001400 [			new_buffer BYTE BUFSIZE DUP(?),0
	    00
	   ] 00
 00002806 00000000			fileSize dword 0
 0000280A  00000028 [			idArr byte 40 dup('_'), 0
	    5F
	   ] 00
 00002833  000000C8 [			nameArr byte 200 dup('_'), 0
	    5F
	   ] 00
 000028FC  0000001E [			gradeArr byte 30 dup('_'), 0
	    5F
	   ] 00
 0000291B  0000000A [			alphaGradeArr byte 10 dup('_'), 0
	    5F
	   ] 00
					
 00000000			.code
 00000000			Open_Createfile proc,f_Name:ptr byte
 00000000  55		   *	    push   ebp
 00000001  8B EC	   *	    mov    ebp, esp
					INVOKE CreateFile,
					f_Name, GENERIC_WRITE OR GENERIC_READ, DO_NOT_SHARE, NULL,
					OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL, 0
 00000003  6A 00	   *	    push   +000000000h
 00000005  68 00000080	   *	    push   +000000080h
 0000000A  6A 04	   *	    push   +000000004h
 0000000C  6A 00	   *	    push   +000000000h
 0000000E  6A 00	   *	    push   +000000000h
 00000010  68 C0000000	   *	    push   +0C0000000h
 00000015  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 00000018  E8 00000000 E   *	    call   CreateFileA
					ret
 0000001D  C9		   *	    leave  
 0000001E  C2 0004	   *	    ret    00004h
 00000021			Open_Createfile endp

 00000021			getIdIndex proc, IDS: Dword
 00000021  55		   *	    push   ebp
 00000022  8B EC	   *	    mov    ebp, esp
 00000024  FC				cld
 00000025  BF 0000280A R		mov edi, offset idArr
 0000002A  B9 00000029			mov ecx, lengthof idArr
 0000002F  8B 45 08			mov eax, IDS
 00000032  F2/ AE			repne scasb ;//scan string till 'w' is found
 00000034  75 09			jne not_found ;//'w' is not found, jump to not_found label
					;//Otherwise, ecx has the index of that character but reversed
					;//So, make eax = lengthof(str1) - ecx - 1
 00000036  B8 00000028			mov eax, lengthof idArr - 1
 0000003B  2B C1			sub eax, ecx
 0000003D  EB 07			jmp found
 0000003F				not_found:
 0000003F  B8 FFFFFFFF			mov eax, -1
 00000044  EB 0C			jmp done
 00000046				found:
 00000046  BB 00000004			mov ebx,4
 0000004B  BA 00000000			mov edx,0
 00000050  F7 F3			div ebx
 00000052				done:
					ret
 00000052  C9		   *	    leave  
 00000053  C2 0004	   *	    ret    00004h
 00000056			getIdIndex endP

 00000056			OpenDatabase proc,f_Name:ptr byte,kye:byte
					;//open the file
 00000056  55		   *	    push   ebp
 00000057  8B EC	   *	    mov    ebp, esp
					INVOKE Open_Createfile,f_Name
 00000059  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 0000005C  E8 FFFFFF9F	   *	    call   Open_Createfile
 00000061  A3 00000000 R		mov filehandle, eax
					;//load the file in buffer
					INVOKE ReadFile,
					filehandle,offset buffer,BUFSIZE,offset fileSize,NULL
 00000066  6A 00	   *	    push   +000000000h
 00000068  68 00002806 R   *	    push   dword  ptr OFFSET FLAT: fileSize
 0000006D  68 00001400	   *	    push   +000001400h
 00000072  68 00000004 R   *	    push   dword  ptr OFFSET FLAT: buffer
 00000077  FF 35 00000000 R *	    push   filehandle
 0000007D  E8 00000000 E   *	    call   ReadFile
					;//decrypt data 
					comment @
					mov esi ,offset buffer
					mov edi ,esi
					mov ecx, fileSize
					cmp ecx,0
					je done
					L:
						lodsb
						xor al,kye
						stosb
					loop L
					call SplitBuffer
					done:
					@
					;//close the file
					INVOKE CloseHandle,filehandle
 00000082  FF 35 00000000 R *	    push   filehandle
 00000088  E8 00000000 E   *	    call   CloseHandle
					ret
 0000008D  C9		   *	    leave  
 0000008E  C2 0008	   *	    ret    00008h
 00000091			OpenDatabase endp
source.asm(71) : warning A6004:procedure argument or local not referenced : kye

 00000091			SaveDatabase proc,f_Name:ptr byte,kye:byte
					;//open the file
 00000091  55		   *	    push   ebp
 00000092  8B EC	   *	    mov    ebp, esp
					INVOKE Open_Createfile,f_Name
 00000094  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 00000097  E8 FFFFFF64	   *	    call   Open_Createfile
 0000009C  A3 00000000 R		mov filehandle,eax
					;//encrypt data
					comment @
					mov esi ,offset buffer
					mov edi ,esi
					mov ecx, fileSize
					L:
						lodsb
						xor al,kye
						stosb
					loop L
					@
					;//write data in the file
					INVOKE WriteFile,
					filehandle,offset buffer,fileSize,offset fileSize,null
 000000A1  6A 00	   *	    push   +000000000h
 000000A3  68 00002806 R   *	    push   dword  ptr OFFSET FLAT: fileSize
 000000A8  FF 35 00002806 R *	    push   fileSize
 000000AE  68 00000004 R   *	    push   dword  ptr OFFSET FLAT: buffer
 000000B3  FF 35 00000000 R *	    push   filehandle
 000000B9  E8 00000000 E   *	    call   WriteFile
					;//close the file
					INVOKE CloseHandle,filehandle
 000000BE  FF 35 00000000 R *	    push   filehandle
 000000C4  E8 00000000 E   *	    call   CloseHandle
					ret
 000000C9  C9		   *	    leave  
 000000CA  C2 0008	   *	    ret    00008h
 000000CD			SaveDatabase endp
source.asm(94) : warning A6004:procedure argument or local not referenced : kye

 000000CD			EnrollStudent proc,s_id:ptr byte,s_name:ptr byte, id_size: dword, name_size: dword
					;//set pointer to the end of the bufferr
 000000CD  55		   *	    push   ebp
 000000CE  8B EC	   *	    mov    ebp, esp
 000000D0  BF 00000004 R		mov edi , offset buffer 
 000000D5  03 3D 00002806 R		add edi , fileSize			
					;//store id
 000000DB  8B 75 08			mov esi , s_id
 000000DE  8B 4D 10			mov ecx ,id_size
 000000E1  F3/ A4			rep movsb
					;//write (,)
 000000E3  C6 07 2C			mov byte ptr [edi], ','
 000000E6  47				inc edi
					;//store name
 000000E7  8B 75 0C			mov esi , s_name
 000000EA  8B 4D 14			mov ecx , name_size
 000000ED  F3/ A4			rep movsb
					;//write (,)
 000000EF  C6 07 2C			mov byte ptr[edi], ','
 000000F2  47				inc edi
					;//save space to grade and Alpha_gread
 000000F3  83 C7 03			add edi,grade_size 
					;//write (,)
 000000F6  C6 07 2C			mov byte ptr[edi], ','
 000000F9  83 C7 02			add edi,2
					;//write (,)
 000000FC  C6 07 2C			mov byte ptr[edi], ','
 000000FF  47				inc edi
					;//carrying_return
 00000100  C6 07 0D			mov byte ptr[edi],13		
 00000103  47				inc edi
					;//line_feed
 00000104  C6 07 0A			mov byte ptr[edi],10
 00000107  B8 00000000			mov eax, 0
 0000010C  03 45 10			add eax, id_size
 0000010F  03 45 14			add eax, name_size
 00000112  83 C0 03			add eax, grade_size
 00000115  83 C0 07			add eax, 7
 00000118  01 05 00002806 R		add fileSize, eax
					ret
 0000011E  C9		   *	    leave  
 0000011F  C2 0010	   *	    ret    00010h
 00000122			EnrollStudent endp

 00000122			fillBuffer proc
 00000122  BF 00000004 R		mov edi, offset buffer
 00000127  8B 1D 0000292E R		mov ebx, idS
					;//copy id
 0000012D  BE 0000280A R		mov esi, offset idArr
 00000132				L1 :
 00000132  A4				movsb
 00000133  4A				dec edx
 00000134  80 3E 5F			cmp byte ptr[esi], '_'
 00000137  75 F9			jne L1
					;//write (,)
 00000139  C6 07 2C			mov byte ptr[edi], ','
 0000013C  47				inc edi
					;//copy name
 0000013D  BE 00002833 R		mov esi, offset nameArr
 00000142				L2 :
 00000142  A4				movsb
 00000143  4A				dec edx
 00000144  80 3E 5F			cmp byte ptr[esi], '_'
 00000147  75 F9			jne L2
					;//write (,)
 00000149  C6 07 2C			mov byte ptr[edi], ','
 0000014C  47				inc edi
					;//copy Grade
 0000014D  BE 000028FC R		mov esi, offset gradeArr
 00000152  B9 00000003			mov ecx, 3
 00000157				L3 :
 00000157  A4				movsb
 00000158  4A				dec edx
 00000159  E2 FC			Loop L3
					;//write (,)
 0000015B  C6 07 2C			mov byte ptr[edi], ','
 0000015E  47				inc edi
					;//copy alphaGrade
 0000015F  BE 0000291B R		mov esi, offset alphaGradeArr
 00000164  A4				movsb
					;//write (,)
 00000165  C6 07 2C			mov byte ptr[edi], ','
 00000168  47				inc edi
					;//add new line
 00000169  C6 07 0D			mov byte ptr[edi], 13
 0000016C  47				inc edi
 0000016D  C6 07 0A			mov byte ptr[edi], 10
 00000170  47				inc edi
 00000171  C3				ret
 00000172			fillBuffer endp

 00000172			UpdateGrade proc,s_id:dword,s_grade:dword

 00000172  55		   *	    push   ebp
 00000173  8B EC	   *	    mov    ebp, esp
					ret
 00000175  C9		   *	    leave  
 00000176  C2 0008	   *	    ret    00008h
 00000179			UpdateGrade endp
source.asm(186) : warning A6004:procedure argument or local not referenced : s_id
source.asm(186) : warning A6004:procedure argument or local not referenced : s_grade

 00000179			DeleteStudent proc,s_id:dword

 00000179  55		   *	    push   ebp
 0000017A  8B EC	   *	    mov    ebp, esp
					ret
 0000017C  C9		   *	    leave  
 0000017D  C2 0004	   *	    ret    00004h
 00000180			DeleteStudent endp
source.asm(191) : warning A6004:procedure argument or local not referenced : s_id

 00000180			DisStudentData proc,s_id:dword,s_name:ptr byte,s_grade:ptr dword
					
 00000180  55		   *	    push   ebp
 00000181  8B EC	   *	    mov    ebp, esp
					ret
 00000183  C9		   *	    leave  
 00000184  C2 000C	   *	    ret    0000Ch
 00000187			DisStudentData endp
source.asm(196) : warning A6004:procedure argument or local not referenced : s_id
source.asm(196) : warning A6004:procedure argument or local not referenced : s_name
source.asm(196) : warning A6004:procedure argument or local not referenced : s_grade

 00000187			GenerateReport proc,f_name:ptr byte,sortby:byte

 00000187  55		   *	    push   ebp
 00000188  8B EC	   *	    mov    ebp, esp
					ret
 0000018A  C9		   *	    leave  
 0000018B  C2 0008	   *	    ret    00008h
 0000018E			GenerateReport endp
source.asm(201) : warning A6004:procedure argument or local not referenced : f_name
source.asm(201) : warning A6004:procedure argument or local not referenced : sortby

 0000018E			SplitBuffer proc
					;//file example : "10,Ahmed,100,", 13, 10, "20,Zaki,300,", 13, 10, "30,Hassan,600,", 13, 10, 0
 00002926				.data
 00002926 00000000			startF dword ? ;// start of field which is needed to be copied
 0000292A 00000000			endF dword ? ;// end of field which is needed to be copied
 0000292E 00000000			idS dword ?
 00002932 00000000			namS dword ?
 00002936 00000000			gradeS dword ?
 0000293A 00000000			alphaGradeS dword ?
 0000018E				.code
 0000018E  60				pushad
 0000018F  BF 00000004 R		mov edi, offset buffer
 00000194  C7 05 0000292E R		mov idS, offset idArr
	   0000280A R
 0000019E  C7 05 00002932 R		mov namS, offset nameArr
	   00002833 R
 000001A8  C7 05 00002936 R		mov gradeS, offset gradeArr
	   000028FC R
 000001B2  C7 05 0000293A R		mov alphaGradeS, offset alphaGradeArr
	   0000291B R
 000001BC  B0 2C			mov al, ','
 000001BE				outer :;//loop until the file end with 0
 000001BE  B9 00000004			mov ecx, 4;//3 for id and name and grade
 000001C3				inner:
 000001C3  51				push ecx
 000001C4  B9 00001401			mov ecx, lengthof buffer
 000001C9  89 3D 00002926 R		mov startF, edi
 000001CF  F2/ AE			repne scasb;// move edi to the offset that have (,)
 000001D1  89 3D 0000292A R		mov endF, edi
 000001D7  FF 0D 0000292A R		dec endF
 000001DD  59				pop ecx
 000001DE  8B 1D 0000292A R		mov ebx, endF;// ebx equals the number of bytes read (endF - startF)
 000001E4  2B 1D 00002926 R		sub ebx, startF
 000001EA  57				push edi
					;// fill arrays with data between startF and endF
 000001EB  83 F9 03			cmp dword ptr ecx, 3
 000001EE  74 19			je N
 000001F0  83 F9 02			cmp dword ptr ecx, 2
 000001F3  74 23			je G
 000001F5  83 F9 01			cmp dword ptr ecx, 1
 000001F8  74 2D			je A
 000001FA  8B 3D 0000292E R		mov edi, idS
 00000200  83 05 0000292E R		add idS, 4
	   04
 00000207  EB 2B			jmp next
 00000209				N :
 00000209  8B 3D 00002932 R		mov edi, namS
 0000020F  83 05 00002932 R		add namS, 20
	   14
 00000216  EB 1C			jmp next
 00000218				G :
 00000218  8B 3D 00002936 R		mov edi, gradeS
 0000021E  83 05 00002936 R		add gradeS, 3
	   03
 00000225  EB 0D			jmp next
 00000227				A :
 00000227  8B 3D 0000293A R		mov edi, alphaGradeS
 0000022D  83 05 0000293A R		add alphaGradeS, 1
	   01
 00000234				next :
 00000234  51				push ecx
 00000235  8B CB			mov ecx, ebx
 00000237  8B 35 00002926 R		mov esi, startF
 0000023D  F3/ A4			rep movsb
 0000023F  59				pop ecx
 00000240  5F				pop edi
 00000241  E2 80			Loop inner
 00000243  83 C7 02			add edi, 2
 00000246  80 3F 00			cmp byte ptr[edi], 0
 00000249  0F 85 FFFFFF6F		jne outer
 0000024F  61				popad
 00000250  C3				ret
 00000251			SplitBuffer endp

 00000251			AlphaGrade proc grade2: ptr byte
 00000251  55		   *	    push   ebp
 00000252  8B EC	   *	    mov    ebp, esp
 0000293E				.data
 0000293E 20 36 30 00			gradeF byte " 60", 0
 00002942 20 37 30 00			gradeD byte " 70", 0
 00002946 20 38 30 00			gradeC byte " 80", 0
 0000294A 20 39 30 00			gradeB byte " 90", 0
 00000254				.code
 00000254  8B 75 08			mov esi,  grade2
 00000257  BF 0000293E R		mov edi, offset gradeF
 0000025C  B9 00000003			mov ecx, 3
 00000261  F3/ A6			repe cmpsb
 00000263  72 43			jb FG

 00000265  8B 75 08			mov esi,  grade2
 00000268  BF 00002942 R		mov edi, offset gradeD
 0000026D  B9 00000003			mov ecx, 3
 00000272  F3/ A6			repe cmpsb
 00000274  72 2E			jb DG

 00000276  8B 75 08			mov esi,  grade2
 00000279  BF 00002946 R		mov edi, offset gradeC
 0000027E  B9 00000003			mov ecx, 3
 00000283  F3/ A6			repe cmpsb
 00000285  72 19			jb CG

 00000287  8B 75 08			mov esi,  grade2
 0000028A  BF 0000294A R		mov edi, offset gradeB
 0000028F  B9 00000003			mov ecx, 3
 00000294  F3/ A6			repe cmpsb
 00000296  72 04			jb BG

 00000298				AG :
 00000298  B0 41			mov al, 'A'
 0000029A  EB 0E			jmp done
 0000029C				BG :
 0000029C  B0 42			mov al, 'B'
 0000029E  EB 0A			jmp done
 000002A0				CG :
 000002A0  B0 43			mov al, 'C'
 000002A2  EB 06			jmp done
 000002A4				DG :
 000002A4  B0 44			mov al, 'D'
 000002A6  EB 02			jmp done
 000002A8				FG :
 000002A8  B0 46			mov al, 'F'
 000002AA				done :
					ret
 000002AA  C9		   *	    leave  
 000002AB  C2 0004	   *	    ret    00004h
 000002AE			AlphaGrade endp

 000002AE			DllMain PROC hInstance:DWORD, fdwReason:DWORD, lpReserved:DWORD 
 000002AE  55		   *	    push   ebp
 000002AF  8B EC	   *	    mov    ebp, esp
 000002B1  B8 00000001			mov eax, 1;//Return true to caller. 
					ret 
 000002B6  C9		   *	    leave  
 000002B7  C2 000C	   *	    ret    0000Ch
 000002BA			DllMain ENDP
source.asm(321) : warning A6004:procedure argument or local not referenced : hInstance
source.asm(321) : warning A6004:procedure argument or local not referenced : fdwReason
source.asm(321) : warning A6004:procedure argument or local not referenced : lpReserved


				END DllMain

Microsoft (R) Macro Assembler Version 14.00.24210.0	    12/19/17 05:42:37
source.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000294E Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000002BA Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

AlphaGrade . . . . . . . . . . .	P Near	 00000251 _TEXT	Length= 0000005D Public STDCALL
  grade2 . . . . . . . . . . . .	DWord	 bp + 00000008
  AG . . . . . . . . . . . . . .	L Near	 00000298 _TEXT	
  BG . . . . . . . . . . . . . .	L Near	 0000029C _TEXT	
  CG . . . . . . . . . . . . . .	L Near	 000002A0 _TEXT	
  DG . . . . . . . . . . . . . .	L Near	 000002A4 _TEXT	
  FG . . . . . . . . . . . . . .	L Near	 000002A8 _TEXT	
  done . . . . . . . . . . . . .	L Near	 000002AA _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeleteStudent  . . . . . . . . .	P Near	 00000179 _TEXT	Length= 00000007 Public STDCALL
  s_id . . . . . . . . . . . . .	DWord	 bp + 00000008
DisStudentData . . . . . . . . .	P Near	 00000180 _TEXT	Length= 00000007 Public STDCALL
  s_id . . . . . . . . . . . . .	DWord	 bp + 00000008
  s_name . . . . . . . . . . . .	DWord	 bp + 0000000C
  s_grade  . . . . . . . . . . .	DWord	 bp + 00000010
DllMain  . . . . . . . . . . . .	P Near	 000002AE _TEXT	Length= 0000000C Public STDCALL
  hInstance  . . . . . . . . . .	DWord	 bp + 00000008
  fdwReason  . . . . . . . . . .	DWord	 bp + 0000000C
  lpReserved . . . . . . . . . .	DWord	 bp + 00000010
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnrollStudent  . . . . . . . . .	P Near	 000000CD _TEXT	Length= 00000055 Public STDCALL
  s_id . . . . . . . . . . . . .	DWord	 bp + 00000008
  s_name . . . . . . . . . . . .	DWord	 bp + 0000000C
  id_size  . . . . . . . . . . .	DWord	 bp + 00000010
  name_size  . . . . . . . . . .	DWord	 bp + 00000014
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GenerateReport . . . . . . . . .	P Near	 00000187 _TEXT	Length= 00000007 Public STDCALL
  f_name . . . . . . . . . . . .	DWord	 bp + 00000008
  sortby . . . . . . . . . . . .	Byte	 bp + 0000000C
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenDatabase . . . . . . . . . .	P Near	 00000056 _TEXT	Length= 0000003B Public STDCALL
  f_Name . . . . . . . . . . . .	DWord	 bp + 00000008
  kye  . . . . . . . . . . . . .	Byte	 bp + 0000000C
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Open_Createfile  . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000021 Public STDCALL
  f_Name . . . . . . . . . . . .	DWord	 bp + 00000008
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SaveDatabase . . . . . . . . . .	P Near	 00000091 _TEXT	Length= 0000003C Public STDCALL
  f_Name . . . . . . . . . . . .	DWord	 bp + 00000008
  kye  . . . . . . . . . . . . .	Byte	 bp + 0000000C
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SplitBuffer  . . . . . . . . . .	P Near	 0000018E _TEXT	Length= 000000C3 Public STDCALL
  outer  . . . . . . . . . . . .	L Near	 000001BE _TEXT	
  inner  . . . . . . . . . . . .	L Near	 000001C3 _TEXT	
  N  . . . . . . . . . . . . . .	L Near	 00000209 _TEXT	
  G  . . . . . . . . . . . . . .	L Near	 00000218 _TEXT	
  A  . . . . . . . . . . . . . .	L Near	 00000227 _TEXT	
  next . . . . . . . . . . . . .	L Near	 00000234 _TEXT	
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UpdateGrade  . . . . . . . . . .	P Near	 00000172 _TEXT	Length= 00000007 Public STDCALL
  s_id . . . . . . . . . . . . .	DWord	 bp + 00000008
  s_grade  . . . . . . . . . . .	DWord	 bp + 0000000C
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
fillBuffer . . . . . . . . . . .	P Near	 00000122 _TEXT	Length= 00000050 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 00000132 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 00000142 _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 00000157 _TEXT	
getIdIndex . . . . . . . . . . .	P Near	 00000021 _TEXT	Length= 00000035 Public STDCALL
  IDS  . . . . . . . . . . . . .	DWord	 bp + 00000008
  not_found  . . . . . . . . . .	L Near	 0000003F _TEXT	
  found  . . . . . . . . . . . .	L Near	 00000046 _TEXT	
  done . . . . . . . . . . . . .	L Near	 00000052 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
BUFSIZE  . . . . . . . . . . . .	Number	 00001400h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
alphaGradeArr  . . . . . . . . .	Byte	 0000291B _DATA	
alphaGradeS  . . . . . . . . . .	DWord	 0000293A _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer . . . . . . . . . . . . .	Byte	 00000004 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
endF . . . . . . . . . . . . . .	DWord	 0000292A _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fileSize . . . . . . . . . . . .	DWord	 00002806 _DATA	
filehandle . . . . . . . . . . .	DWord	 00000000 _DATA	
gradeArr . . . . . . . . . . . .	Byte	 000028FC _DATA	
gradeB . . . . . . . . . . . . .	Byte	 0000294A _DATA	
gradeC . . . . . . . . . . . . .	Byte	 00002946 _DATA	
gradeD . . . . . . . . . . . . .	Byte	 00002942 _DATA	
gradeF . . . . . . . . . . . . .	Byte	 0000293E _DATA	
gradeS . . . . . . . . . . . . .	DWord	 00002936 _DATA	
grade_size . . . . . . . . . . .	Number	 00000003h   
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
idArr  . . . . . . . . . . . . .	Byte	 0000280A _DATA	
idS  . . . . . . . . . . . . . .	DWord	 0000292E _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
namS . . . . . . . . . . . . . .	DWord	 00002932 _DATA	
nameArr  . . . . . . . . . . . .	Byte	 00002833 _DATA	
new_buffer . . . . . . . . . . .	Byte	 00001405 _DATA	
record_size  . . . . . . . . . .	Number	 0000001Eh   
red  . . . . . . . . . . . . . .	Number	 00000004h   
startF . . . . . . . . . . . . .	DWord	 00002926 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   13 Warnings
	   0 Errors
