Microsoft (R) Macro Assembler Version 14.00.24210.0	    12/16/17 23:52:08
source.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000025			Student STRUCT
 00000000  00000003 [		IdNum byte 3 dup(0)  ; 9
	    00
	   ]
 03730003  0000001E [		StudentName BYTE 30 DUP(0) ; 30
	    00
	   ]
 06E60006  00000003 [		Studentgrade byte 3 dup(0)
	    00
	   ]
 0A590009  00000001 [		StudentAlphaGrade byte 1 dup('A')
	    41
	   ]
				Student ENDS

 00000000			.data
 = 00001400				BUFSIZE = 5120;//5kb
 = 0000001E				record_size=30
 = 00000003				grade_size=3
 00000000 00000000			filehandle dword ?
 00000004 00000000			re_ffilehandle dword ?
 00000008  00001400 [			buffer BYTE BUFSIZE DUP(?),0
	    00
	   ] 00
 00001409  00001400 [			new_buffer BYTE BUFSIZE DUP(?),0
	    00
	   ] 00
 0000280A 00000000			fileSize dword 0
 0000280E  00000014 [			allStudents Student 20 dup(<"000","ahmed","090",'A'>)
	    303030
	    64656D6861
	    00000019 [
	     00
	    ] 303930
	    00000001 [
	     41
	    ]
	   ]
 00000000			.code
 00000000			Open_Createfile proc,f_Name:ptr byte
 00000000  55		   *	    push   ebp
 00000001  8B EC	   *	    mov    ebp, esp
					INVOKE CreateFile,
					f_Name, GENERIC_WRITE OR GENERIC_READ, DO_NOT_SHARE, NULL,
					OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL, 0
 00000003  6A 00	   *	    push   +000000000h
 00000005  68 00000080	   *	    push   +000000080h
 0000000A  6A 04	   *	    push   +000000004h
 0000000C  6A 00	   *	    push   +000000000h
 0000000E  6A 00	   *	    push   +000000000h
 00000010  68 C0000000	   *	    push   +0C0000000h
 00000015  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 00000018  E8 00000000 E   *	    call   CreateFileA
					ret
 0000001D  C9		   *	    leave  
 0000001E  C2 0004	   *	    ret    00004h
 00000021			Open_Createfile endp

 00000021			OpenDatabase proc,f_Name:ptr byte,kye:byte
					;//open the file
 00000021  55		   *	    push   ebp
 00000022  8B EC	   *	    mov    ebp, esp
					INVOKE Open_Createfile,f_Name
 00000024  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 00000027  E8 FFFFFFD4	   *	    call   Open_Createfile
 0000002C  A3 00000000 R		mov filehandle, eax
					;//load the file in buffer
					INVOKE ReadFile,
					filehandle,offset buffer,BUFSIZE,offset fileSize,NULL
 00000031  6A 00	   *	    push   +000000000h
 00000033  68 0000280A R   *	    push   dword  ptr OFFSET FLAT: fileSize
 00000038  68 00001400	   *	    push   +000001400h
 0000003D  68 00000008 R   *	    push   dword  ptr OFFSET FLAT: buffer
 00000042  FF 35 00000000 R *	    push   filehandle
 00000048  E8 00000000 E   *	    call   ReadFile
					;//decrypt data 
 0000004D  BE 00000008 R		mov esi ,offset buffer
 00000052  8B FE			mov edi ,esi
 00000054  8B 0D 0000280A R		mov ecx, fileSize
 0000005A  83 F9 00			cmp ecx,0
 0000005D  74 07			je done
 0000005F				L:
 0000005F  AC					lodsb
 00000060  32 45 0C				xor al,kye
 00000063  AA					stosb
 00000064  E2 F9			loop L
 00000066				done:
					;//close the file
					INVOKE CloseHandle,filehandle
 00000066  FF 35 00000000 R *	    push   filehandle
 0000006C  E8 00000000 E   *	    call   CloseHandle
					ret
 00000071  C9		   *	    leave  
 00000072  C2 0008	   *	    ret    00008h
 00000075			OpenDatabase endp

 00000075			SaveDatabase proc,f_Name:ptr byte,kye:byte
					;//open the file
 00000075  55		   *	    push   ebp
 00000076  8B EC	   *	    mov    ebp, esp
					INVOKE Open_Createfile,f_Name
 00000078  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 0000007B  E8 FFFFFF80	   *	    call   Open_Createfile
 00000080  A3 00000000 R		mov filehandle,eax
					;//encrypt data 
 00000085  BE 00000008 R		mov esi ,offset buffer
 0000008A  8B FE			mov edi ,esi
 0000008C  8B 0D 0000280A R		mov ecx, fileSize
 00000092				L:
 00000092  AC					lodsb
 00000093  32 45 0C				xor al,kye
 00000096  AA					stosb
 00000097  E2 F9			loop L
					;//write data in the file
					INVOKE WriteFile,
					filehandle,offset buffer,fileSize,offset fileSize,null
 00000099  6A 00	   *	    push   +000000000h
 0000009B  68 0000280A R   *	    push   dword  ptr OFFSET FLAT: fileSize
 000000A0  FF 35 0000280A R *	    push   fileSize
 000000A6  68 00000008 R   *	    push   dword  ptr OFFSET FLAT: buffer
 000000AB  FF 35 00000000 R *	    push   filehandle
 000000B1  E8 00000000 E   *	    call   WriteFile
					;//close the file
					INVOKE CloseHandle,filehandle
 000000B6  FF 35 00000000 R *	    push   filehandle
 000000BC  E8 00000000 E   *	    call   CloseHandle
					ret
 000000C1  C9		   *	    leave  
 000000C2  C2 0008	   *	    ret    00008h
 000000C5			SaveDatabase endp

 000000C5			EnrollStudent proc,s_id:ptr byte,s_name:ptr byte, id_size: dword, name_size: dword
					;//set pointer to the end of the bufferr
 000000C5  55		   *	    push   ebp
 000000C6  8B EC	   *	    mov    ebp, esp
 000000C8  BF 00000008 R		mov edi , offset buffer 
 000000CD  03 3D 0000280A R		add edi , fileSize			
					;//store id
 000000D3  8B 75 08			mov esi , s_id
 000000D6  8B 4D 10			mov ecx ,id_size
 000000D9  F3/ A4			rep movsb
					;//write (,)
 000000DB  C6 07 2C			mov byte ptr [edi], ','
 000000DE  47				inc edi
					;//store name
 000000DF  8B 75 0C			mov esi , s_name
 000000E2  8B 4D 14			mov ecx , name_size
 000000E5  F3/ A4			rep movsb
					;//write (,)
 000000E7  C6 07 2C			mov byte ptr[edi], ','
 000000EA  47				inc edi
					;//save space to grade and Alpha_gread
 000000EB  83 C7 04			add edi,grade_size +1
					;//write (,)
 000000EE  C6 07 2C			mov byte ptr[edi], ','
 000000F1  47				inc edi
					;//carrying_return
 000000F2  C6 07 0D			mov byte ptr[edi],13		
 000000F5  47				inc edi
					;//line_feed
 000000F6  C6 07 0A			mov byte ptr[edi],10
 000000F9  B8 00000000			mov eax, 0
 000000FE  03 45 10			add eax, id_size
 00000101  03 45 14			add eax, name_size
 00000104  83 C0 03			add eax, grade_size
 00000107  83 C0 06			add eax, 6
 0000010A  01 05 0000280A R		add fileSize, eax
					ret
 00000110  C9		   *	    leave  
 00000111  C2 0010	   *	    ret    00010h
 00000114			EnrollStudent endp

 00000114			UpdateGrade proc,s_id:dword,s_grade:dword

 00000114  55		   *	    push   ebp
 00000115  8B EC	   *	    mov    ebp, esp
					ret
 00000117  C9		   *	    leave  
 00000118  C2 0008	   *	    ret    00008h
 0000011B			UpdateGrade endp
source.asm(113) : warning A6004:procedure argument or local not referenced : s_id
source.asm(113) : warning A6004:procedure argument or local not referenced : s_grade

 0000011B			DeleteStudent proc,s_id:dword

 0000011B  55		   *	    push   ebp
 0000011C  8B EC	   *	    mov    ebp, esp
					ret
 0000011E  C9		   *	    leave  
 0000011F  C2 0004	   *	    ret    00004h
 00000122			DeleteStudent endp
source.asm(118) : warning A6004:procedure argument or local not referenced : s_id

 00000122			DisStudentData proc,s_id:dword,s_name:ptr byte,s_grade:ptr dword
					
 00000122  55		   *	    push   ebp
 00000123  8B EC	   *	    mov    ebp, esp
					ret
 00000125  C9		   *	    leave  
 00000126  C2 000C	   *	    ret    0000Ch
 00000129			DisStudentData endp
source.asm(123) : warning A6004:procedure argument or local not referenced : s_id
source.asm(123) : warning A6004:procedure argument or local not referenced : s_name
source.asm(123) : warning A6004:procedure argument or local not referenced : s_grade

 00000129			GenerateReport proc,f_name:ptr byte,sortby:byte

 00000129  55		   *	    push   ebp
 0000012A  8B EC	   *	    mov    ebp, esp
					ret
 0000012C  C9		   *	    leave  
 0000012D  C2 0008	   *	    ret    00008h
 00000130			GenerateReport endp
source.asm(128) : warning A6004:procedure argument or local not referenced : f_name
source.asm(128) : warning A6004:procedure argument or local not referenced : sortby

 00000130			SplitBuffer proc 
					;//file example : "10,Ahmed,100,", 13, 10, "20,Zaki,300,", 13, 10, "30,Hassan,600,", 13, 10, 0
 00002AF2				.data
 00002AF2  0000001E [			id byte 30 dup(? );// id array
	    00
	   ]
 00002B10  0000001E [			nam byte 30 dup(? );// name array
	    00
	   ]
 00002B2E  0000001E [			grade byte 30 dup(? );// grade array
	    00
	   ]
 00002B4C 00000000			startF dword ? ;// start of field which is needed to be copied
 00002B50 00000000			endF dword ? ;// end of field which is needed to be copied
 00002B54 00000000			idS dword ? ;// offset of last id written in (id) array
 00002B58 00000000			namS dword ? ;// offset of last name written in (nam) array
 00002B5C 00000000			gradeS dword ? ;// offset of last id written in (grade) array
 00002B60 00				tmp byte ?
 00000130				.code
 00000130  BF 00000008 R		mov edi, offset buffer
 00000135  C7 05 00002B54 R		mov idS, offset id
	   00002AF2 R
 0000013F  C7 05 00002B58 R		mov namS, offset nam
	   00002B10 R
 00000149  C7 05 00002B5C R		mov gradeS, offset grade
	   00002B2E R
 00000153  B0 2C			mov al, ','
 00000155				outer :;//loop until the buffer end with 0
 00000155  BA 00002AF2 R		mov edx, offset id
 0000015A  B9 00000003			mov ecx, 3;//3 for id and name and grade
 0000015F				inner:
 0000015F  51				push ecx
 00000160  B9 00001401			mov ecx, lengthof buffer
 00000165  89 3D 00002B4C R		mov startF, edi
 0000016B  F2/ AE			repne scasb;// move edi to the offset that have (,)
 0000016D  89 3D 00002B50 R		mov endF, edi
 00000173  FF 0D 00002B50 R		dec endF
 00000179  59				pop ecx
 0000017A  8B 1D 00002B50 R		mov ebx, endF;// ebx equals the number of bytes read (endF - startF)
 00000180  2B 1D 00002B4C R		sub ebx, startF
 00000186  57				push edi
					;// fill arrays with data between startF and endF
 00000187  83 F9 02			cmp dword ptr ecx, 2
 0000018A  74 13			je N
 0000018C  83 F9 01			cmp dword ptr ecx, 1
 0000018F  74 1C			je G
 00000191  8B 3D 00002B54 R		mov edi, idS
 00000197  01 1D 00002B54 R		add idS, ebx
 0000019D  EB 1A			jmp next
 0000019F				N :
 0000019F  8B 3D 00002B58 R		mov edi, namS
 000001A5  01 1D 00002B58 R		add namS, ebx
 000001AB  EB 0C			jmp next
 000001AD				G :
 000001AD  8B 3D 00002B5C R		mov edi, gradeS
 000001B3  01 1D 00002B5C R		add gradeS, ebx
 000001B9				next :
 000001B9  51				push ecx
 000001BA  8B CB			mov ecx, ebx
 000001BC  8B 35 00002B4C R		mov esi, startF
 000001C2  F3/ A4			rep movsb
 000001C4  59				pop ecx
 000001C5  5F				pop edi
 000001C6  E2 97			Loop inner
 000001C8  83 C7 02			add edi, 2
 000001CB  80 3F 00			cmp byte ptr[edi], 0
 000001CE  75 85			jne outer
 000001D0  C3				ret
 000001D1			SplitBuffer endp

 000001D1			AlphaGrade proc grade2: ptr byte
 000001D1  55		   *	    push   ebp
 000001D2  8B EC	   *	    mov    ebp, esp
 00002B61				.data
 00002B61 30 35 39 00			gradeF byte "059", 0
 00002B65 30 36 39 00			gradeD byte "069", 0
 00002B69 30 37 39 00			gradeC byte "079", 0
 00002B6D 30 38 39 00			gradeB byte "089", 0
 000001D4				.code
 000001D4  8B 75 08			mov esi,  grade2
 000001D7  BF 00002B61 R		mov edi, offset gradeF
 000001DC  F3/ A6			repe cmpsb
 000001DE  72 34			jb FG

 000001E0  8B 75 08			mov esi,  grade2
 000001E3  BF 00002B65 R		mov edi, offset gradeD
 000001E8  F3/ A6			repe cmpsb
 000001EA  72 24			jb DG

 000001EC  8B 75 08			mov esi,  grade2
 000001EF  BF 00002B69 R		mov edi, offset gradeC
 000001F4  F3/ A6			repe cmpsb
 000001F6  72 14			jb CG

 000001F8  8B 75 08			mov esi,  grade2
 000001FB  BF 00002B6D R		mov edi, offset gradeB
 00000200  F3/ A6			repe cmpsb
 00000202  72 04			jb BG

 00000204				AG :
 00000204  B0 41			mov al, 'A'
 00000206  EB 0E			jmp done
 00000208				BG :
 00000208  B0 42			mov al, 'B'
 0000020A  EB 0A			jmp done
 0000020C				CG :
 0000020C  B0 43			mov al, 'C'
 0000020E  EB 06			jmp done
 00000210				DG :
 00000210  B0 44			mov al, 'D'
 00000212  EB 02			jmp done
 00000214				FG :
 00000214  B0 46			mov al, 'F'
 00000216				done :
					ret
 00000216  C9		   *	    leave  
 00000217  C2 0004	   *	    ret    00004h
 0000021A			AlphaGrade endp

 0000021A			DllMain PROC hInstance:DWORD, fdwReason:DWORD, lpReserved:DWORD 
 0000021A  55		   *	    push   ebp
 0000021B  8B EC	   *	    mov    ebp, esp
 0000021D  B8 00000001			mov eax, 1; Return true to caller. 
					ret 
 00000222  C9		   *	    leave  
 00000223  C2 000C	   *	    ret    0000Ch
 00000226			DllMain ENDP
source.asm(239) : warning A6004:procedure argument or local not referenced : hInstance
source.asm(239) : warning A6004:procedure argument or local not referenced : fdwReason
source.asm(239) : warning A6004:procedure argument or local not referenced : lpReserved

				END DllMain

Microsoft (R) Macro Assembler Version 14.00.24210.0	    12/16/17 23:52:08
source.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
Student  . . . . . . . . . . . .	 00000025
  IdNum  . . . . . . . . . . . .	 00000000	 Byte
  StudentName  . . . . . . . . .	 00000003	 Byte
  Studentgrade . . . . . . . . .	 00000021	 Byte
  StudentAlphaGrade  . . . . . .	 00000024	 Byte
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00002B71 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000226 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

AlphaGrade . . . . . . . . . . .	P Near	 000001D1 _TEXT	Length= 00000049 Public STDCALL
  grade2 . . . . . . . . . . . .	DWord	 bp + 00000008
  AG . . . . . . . . . . . . . .	L Near	 00000204 _TEXT	
  BG . . . . . . . . . . . . . .	L Near	 00000208 _TEXT	
  CG . . . . . . . . . . . . . .	L Near	 0000020C _TEXT	
  DG . . . . . . . . . . . . . .	L Near	 00000210 _TEXT	
  FG . . . . . . . . . . . . . .	L Near	 00000214 _TEXT	
  done . . . . . . . . . . . . .	L Near	 00000216 _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeleteStudent  . . . . . . . . .	P Near	 0000011B _TEXT	Length= 00000007 Public STDCALL
  s_id . . . . . . . . . . . . .	DWord	 bp + 00000008
DisStudentData . . . . . . . . .	P Near	 00000122 _TEXT	Length= 00000007 Public STDCALL
  s_id . . . . . . . . . . . . .	DWord	 bp + 00000008
  s_name . . . . . . . . . . . .	DWord	 bp + 0000000C
  s_grade  . . . . . . . . . . .	DWord	 bp + 00000010
DllMain  . . . . . . . . . . . .	P Near	 0000021A _TEXT	Length= 0000000C Public STDCALL
  hInstance  . . . . . . . . . .	DWord	 bp + 00000008
  fdwReason  . . . . . . . . . .	DWord	 bp + 0000000C
  lpReserved . . . . . . . . . .	DWord	 bp + 00000010
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnrollStudent  . . . . . . . . .	P Near	 000000C5 _TEXT	Length= 0000004F Public STDCALL
  s_id . . . . . . . . . . . . .	DWord	 bp + 00000008
  s_name . . . . . . . . . . . .	DWord	 bp + 0000000C
  id_size  . . . . . . . . . . .	DWord	 bp + 00000010
  name_size  . . . . . . . . . .	DWord	 bp + 00000014
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GenerateReport . . . . . . . . .	P Near	 00000129 _TEXT	Length= 00000007 Public STDCALL
  f_name . . . . . . . . . . . .	DWord	 bp + 00000008
  sortby . . . . . . . . . . . .	Byte	 bp + 0000000C
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenDatabase . . . . . . . . . .	P Near	 00000021 _TEXT	Length= 00000054 Public STDCALL
  f_Name . . . . . . . . . . . .	DWord	 bp + 00000008
  kye  . . . . . . . . . . . . .	Byte	 bp + 0000000C
  L  . . . . . . . . . . . . . .	L Near	 0000005F _TEXT	
  done . . . . . . . . . . . . .	L Near	 00000066 _TEXT	
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Open_Createfile  . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000021 Public STDCALL
  f_Name . . . . . . . . . . . .	DWord	 bp + 00000008
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SaveDatabase . . . . . . . . . .	P Near	 00000075 _TEXT	Length= 00000050 Public STDCALL
  f_Name . . . . . . . . . . . .	DWord	 bp + 00000008
  kye  . . . . . . . . . . . . .	Byte	 bp + 0000000C
  L  . . . . . . . . . . . . . .	L Near	 00000092 _TEXT	
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SplitBuffer  . . . . . . . . . .	P Near	 00000130 _TEXT	Length= 000000A1 Public STDCALL
  outer  . . . . . . . . . . . .	L Near	 00000155 _TEXT	
  inner  . . . . . . . . . . . .	L Near	 0000015F _TEXT	
  N  . . . . . . . . . . . . . .	L Near	 0000019F _TEXT	
  G  . . . . . . . . . . . . . .	L Near	 000001AD _TEXT	
  next . . . . . . . . . . . . .	L Near	 000001B9 _TEXT	
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UpdateGrade  . . . . . . . . . .	P Near	 00000114 _TEXT	Length= 00000007 Public STDCALL
  s_id . . . . . . . . . . . . .	DWord	 bp + 00000008
  s_grade  . . . . . . . . . . .	DWord	 bp + 0000000C
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
BUFSIZE  . . . . . . . . . . . .	Number	 00001400h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
allStudents  . . . . . . . . . .	Student	 0000280E _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer . . . . . . . . . . . . .	Byte	 00000008 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
endF . . . . . . . . . . . . . .	DWord	 00002B50 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fileSize . . . . . . . . . . . .	DWord	 0000280A _DATA	
filehandle . . . . . . . . . . .	DWord	 00000000 _DATA	
gradeB . . . . . . . . . . . . .	Byte	 00002B6D _DATA	
gradeC . . . . . . . . . . . . .	Byte	 00002B69 _DATA	
gradeD . . . . . . . . . . . . .	Byte	 00002B65 _DATA	
gradeF . . . . . . . . . . . . .	Byte	 00002B61 _DATA	
gradeS . . . . . . . . . . . . .	DWord	 00002B5C _DATA	
grade_size . . . . . . . . . . .	Number	 00000003h   
grade  . . . . . . . . . . . . .	Byte	 00002B2E _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
idS  . . . . . . . . . . . . . .	DWord	 00002B54 _DATA	
id . . . . . . . . . . . . . . .	Byte	 00002AF2 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
namS . . . . . . . . . . . . . .	DWord	 00002B58 _DATA	
nam  . . . . . . . . . . . . . .	Byte	 00002B10 _DATA	
new_buffer . . . . . . . . . . .	Byte	 00001409 _DATA	
re_ffilehandle . . . . . . . . .	DWord	 00000004 _DATA	
record_size  . . . . . . . . . .	Number	 0000001Eh   
red  . . . . . . . . . . . . . .	Number	 00000004h   
startF . . . . . . . . . . . . .	DWord	 00002B4C _DATA	
tmp  . . . . . . . . . . . . . .	Byte	 00002B60 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   11 Warnings
	   0 Errors
